=====================================================
Unexpected
=====================================================
Alice, Bob, and Carol are really close friends; in fact, they are so close, they even share the same primes in their RSA public keys! Alice has N = P*Q, Bob has N = QR, and Carol has N = PR, where P,Q,R are 1024 bit primes. All three also use the same public exponent e = 65537. Can you recover the three ciphertexts?

N1 = 3895738302299059518129198422310169628530536557191890566210939781698372336257482186582163630847612416277492034959243510457939210010336159061758606919109259916143600981918456942199762738624796190838889500238780675229383463267807384154074134251073572174392024892486431125499446924573006208711810847272390619510395812856188247531815920797526102562723333957594242603466996229335924848954210939152042149332307810693239925149256224795031982752752336401872520016106145667479144091130160998875256860809091721275069193773739370057334041922519998813268278574260846083883264261920589114740823464192397850923545998904365370408113

N2 = 3036683903819675505741091164945461947189004916494633766372176282409409694958701211748277050499101511956962003835932755555293255586827283990400451317444723234406968971873530093281591689832798646915816609347861047534121792409030834659241904646743453387504496246791081682741245482378149293399372654558929658582070853972454887854658545741800574343930155288517185535533201220281739954820271979667081052363406511938025061398551356675540358212449132781674832812796443378476387659729623581274433769056775163718782871879747276327458473970177451591251859530403032170215968101310739004163533767679394201611410832974546802038041

N3 = 4793455677299549137382284585015750073239112414361680529255951318217960300841340399094743130287927996565298160174555422185410320841942637374406558835150138631140265626020072464652973386772727192540062051929655235552439145036105501434801984612127808829810146844869487529177642676245549299371487478280457673839725488195812744535928488844735950540356920273038857127652414836352483913807655170699520816765863272825856765769043174406026964068017257738085400965661973681558654658747878342173984592411085018242201038877382766239487564503728442821348064764166024851080258629751476765613997512620274759264076272801682962144457

E = 65537

C1 = 396708474546125804352894757436683688457291028695044217325853929491171136935487190613513217479209066321213697066977005912522338337419604329864854419961723570625025089500459612736934675744115710978556346050350466970024450696226499749911198313775828281699871502987873199226066403667788132060336882800770615332190939846610876881382430101512212915247532319827304296610854802037475047119525110795533529161852951539770153761419387662527094415537933400873451490021233979268224054475360645920086811082803271848565851436058022797610887635287190533293980480191482625531855511415716253479184799509403767653927424232672209598509

C2 = 355006513750551550798931713354683491263062473879176656452255051848683497534660576981575518851351256702360823676609578259232763677292692743319345273559085724516350773319337226043634439282120083618718026203533033564167432280901197175559735572797382863132012675404876908914335941746393221402727788260354881773319480220225939283398326940847106630716629330817737251316474369640273632208347751866683363389016722969822345738247486942531821199790024647950924227337611907877819668593060172268197128413003269501597578146759488894526193598933152416894414296396043283131502951693668167550687432080480619240585408701379144341703

C3 = 924835278307680480966328618545268895077532556525413716080960421925985654497130329688156219485942736928562517552888163928270855659413958949301590302010862666331053838345196518237383846281768395909801043955047640003147798786793258813501366000503338638933238548605016169865688228297750780710248359326295693845663887055907900967535999885217905972006140096240831305484619796964713673839223632057905454213937054336962510051529266336629730913756688411854427999570223208667606703681762027957427028839409594591627448224813082072169775916331655060221445546199171668136050686471357710989346885039441000083764142021784018773006


=====================================================
Solution
=====================================================

Online tools used to solve this chall:
https://www.calculator.net/big-number-calculator.html (sqrt working)
https://www.boxentriq.com/code-breaking/big-number-calculator
http://www.javascripter.net/math/calculators/100digitbigintcalculator.htm
https://asecuritysite.com/encryption/getprimen
https://www.branah.com/ascii-converter


Alice      Bob        Carol
N1 = P*Q   N2 = Q*R   N3 = P*R

How to get P, Q and R to make the public keys N1, N2 and N3?

A = P*Q = N1
B = Q*R = N2
C = P*R = N3

We need to manipulate the equations making substituitions between the variables

1) P = A / Q
2) C = (A / Q) * R
3) Q = B / R

Replacing 3 em 2 and doing the algebric maipulation:
C = (A / (B / R)) * R =>
C = (A / 1) * (R / B) * R =>
C = A * R * R / B =>
B*C = A * R * R =>
R*R = (B * C) / A =>
R = sqrt((B * C) / A) =>
R = sqrt((N2 * N3) / A)

N2 * N3 = Z1 = 


Z1 / N1 = Z2
3736444434765618994344554050258482781680545185596978632937519816724077451796507856632234417995698352459184660759908257948665219130846573041236095447336925584762689688634034434280126192753239372034841298384763405658865009344565548545586886634603756963510630391482255370109897682034977127681086506102026043788263400511818663161062318519203302895752474341515755027711439978740156510586255092313036842818508044819237439915577266514685584932554631583322337715260652643454007058554722250874090646032918374026813313367460086104350661938819240090865364335409572185330422537075611423631969488651775661860794250219770922142449

R = sqrt(Z2)
61126462639069987282546349606693495214510953620094669574851496406358391513890751482587668137969297836162876712795571157218821652912765544590916544288587089236474146574112272306951575676475076536546993081970818118163814091185720471600515807415123600216518318011691206062868038150209577602981836086669648927143

With R on the hand we can do:

C = P*R = N3 => P = C / R => P = N3 / R

so

P = N3 / R = 
78418666324652211125396891620052825320558450973040543839398903357511369639094892938691829355545917133985165706978952426592591747365610957620078438381429960619146499822807848939056143621820615332303998505494272746654540689704542758074242845828360375442158932066083640856262332174049939793626331262562289501199

Checking if C == N3

C = P*R =
4793455677299549137382284585015750073239112414361680529255951318217960300841340399094743130287927996565298160174555422185410320841942637374406558835150138631140265626020072464652973386772727192540062051929655235552439145036105501434801984612127808829810146844869487529177642676245549299371487478280457673839725488195812744535928488844735950540356920273038857127652414836352483913807655170699520816765863272825856765769043174406026964068017257738085400965661973681558654658747878342173984592411085018242201038877382766239487564503728442821348064764166024851080258629751476765613997512620274759264076272801682962144457
= N3 = 4793455677299549137382284585015750073239112414361680529255951318217960300841340399094743130287927996565298160174555422185410320841942637374406558835150138631140265626020072464652973386772727192540062051929655235552439145036105501434801984612127808829810146844869487529177642676245549299371487478280457673839725488195812744535928488844735950540356920273038857127652414836352483913807655170699520816765863272825856765769043174406026964068017257738085400965661973681558654658747878342173984592411085018242201038877382766239487564503728442821348064764166024851080258629751476765613997512620274759264076272801682962144457

solving for 

3a) Q = B / R => Q = N2 / R
and checking they are the same
3b) Q = A / P => Q = N1 / P

3a)
Q = N2 / R =  49678711522212785111418321230375739420571727647918246123860194052270821123696105052186062429442098615370948161398387271778718242041229842338388004952251017915599312338441646164598963338914837455486889311184673009155602523464421099291888777238202339628897382728540428635994188992024216432875880260769279636287
=
3b)
Q = N1 / P =
49678711522212785111418321230375739420571727647918246123860194052270821123696105052186062429442098615370948161398387271778718242041229842338388004952251017915599312338441646164598963338914837455486889311184673009155602523464421099291888777238202339628897382728540428635994188992024216432875880260769279636287

Checking if B == N2
B = Q*R = 
3036683903819675505741091164945461947189004916494633766372176282409409694958701211748277050499101511956962003835932755555293255586827283990400451317444723234406968971873530093281591689832798646915816609347861047534121792409030834659241904646743453387504496246791081682741245482378149293399372654558929658582070853972454887854658545741800574343930155288517185535533201220281739954820271979667081052363406511938025061398551356675540358212449132781674832812796443378476387659729623581274433769056775163718782871879747276327458473970177451591251859530403032170215968101310739004163533767679394201611410832974546802038041
= N2 =

Checking if A == N1
A = P*Q =
3895738302299059518129198422310169628530536557191890566210939781698372336257482186582163630847612416277492034959243510457939210010336159061758606919109259916143600981918456942199762738624796190838889500238780675229383463267807384154074134251073572174392024892486431125499446924573006208711810847272390619510395812856188247531815920797526102562723333957594242603466996229335924848954210939152042149332307810693239925149256224795031982752752336401872520016106145667479144091130160998875256860809091721275069193773739370057334041922519998813268278574260846083883264261920589114740823464192397850923545998904365370408113
= N1 =
3895738302299059518129198422310169628530536557191890566210939781698372336257482186582163630847612416277492034959243510457939210010336159061758606919109259916143600981918456942199762738624796190838889500238780675229383463267807384154074134251073572174392024892486431125499446924573006208711810847272390619510395812856188247531815920797526102562723333957594242603466996229335924848954210939152042149332307810693239925149256224795031982752752336401872520016106145667479144091130160998875256860809091721275069193773739370057334041922519998813268278574260846083883264261920589114740823464192397850923545998904365370408113

Ok, now we have found P, Q and R lets solve RSA using the script rsa_cipher.py

Then the messages in decimal are:
Message 1: 531812496965684922183719568060676208
Message 2: 266824305320992569160066244889438579
Message 3: 541934055337547139880234255735726461

Conveting to hex:
0x666c61677b6e305f306e335f337870
0x336374355f7468335f7370346e6973
0x685f696e71756973697469306e217d

Puting the hex messages together side by side:
666c61677b6e305f306e335f337870336374355f7468335f7370346e6973685f696e71756973697469306e217d

And converting the hex to ascii using:
https://www.rapidtables.com/convert/number/hex-to-ascii.html

We've got the flag:

flag{n0_0n3_3xp3ct5_th3_sp4nish_inquisiti0n!}
